map :: [a] (a -> b) -> [b]
map [] _ = []
map [a : as] f = [f a : map as f]

foldr :: (a b -> b) b [a] -> b
foldr f start [] = start
foldr f start [x:xs] = f x (foldr f start xs)

main = foldr (\x xs. x + xs) 0 [1, 2, 3, 4, 5]